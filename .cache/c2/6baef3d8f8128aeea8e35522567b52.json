{"id":"node_modules/livekit-client/dist/room/participant/Participant.js","dependencies":[{"name":"D:\\Livekit-Client\\node_modules\\livekit-client\\dist\\room\\participant\\Participant.js.map","includedInParent":true,"mtime":1680887196922},{"name":"D:\\Livekit-Client\\package.json","includedInParent":true,"mtime":1680887270118},{"name":"D:\\Livekit-Client\\node_modules\\livekit-client\\package.json","includedInParent":true,"mtime":1680887189879},{"name":"events","loc":{"line":4,"column":25,"index":138},"parent":"D:\\Livekit-Client\\node_modules\\livekit-client\\dist\\room\\participant\\Participant.js","resolved":"D:\\Livekit-Client\\node_modules\\events\\events.js"},{"name":"../../proto/livekit_models","loc":{"line":5,"column":33,"index":182},"parent":"D:\\Livekit-Client\\node_modules\\livekit-client\\dist\\room\\participant\\Participant.js","resolved":"D:\\Livekit-Client\\node_modules\\livekit-client\\dist\\proto\\livekit_models.js"},{"name":"../events","loc":{"line":6,"column":25,"index":238},"parent":"D:\\Livekit-Client\\node_modules\\livekit-client\\dist\\room\\participant\\Participant.js","resolved":"D:\\Livekit-Client\\node_modules\\livekit-client\\dist\\room\\events.js"},{"name":"../track/Track","loc":{"line":7,"column":24,"index":276},"parent":"D:\\Livekit-Client\\node_modules\\livekit-client\\dist\\room\\participant\\Participant.js","resolved":"D:\\Livekit-Client\\node_modules\\livekit-client\\dist\\room\\track\\Track.js"}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConnectionQuality = void 0;\nconst events_1 = require(\"events\");\nconst livekit_models_1 = require(\"../../proto/livekit_models\");\nconst events_2 = require(\"../events\");\nconst Track_1 = require(\"../track/Track\");\nvar ConnectionQuality;\n(function (ConnectionQuality) {\n    ConnectionQuality[\"Excellent\"] = \"excellent\";\n    ConnectionQuality[\"Good\"] = \"good\";\n    ConnectionQuality[\"Poor\"] = \"poor\";\n    ConnectionQuality[\"Unknown\"] = \"unknown\";\n})(ConnectionQuality = exports.ConnectionQuality || (exports.ConnectionQuality = {}));\nfunction qualityFromProto(q) {\n    switch (q) {\n        case livekit_models_1.ConnectionQuality.EXCELLENT:\n            return ConnectionQuality.Excellent;\n        case livekit_models_1.ConnectionQuality.GOOD:\n            return ConnectionQuality.Good;\n        case livekit_models_1.ConnectionQuality.POOR:\n            return ConnectionQuality.Poor;\n        default:\n            return ConnectionQuality.Unknown;\n    }\n}\nclass Participant extends events_1.EventEmitter {\n    /** @internal */\n    constructor(sid, identity) {\n        super();\n        /** audio level between 0-1.0, 1 being loudest, 0 being softest */\n        this.audioLevel = 0;\n        /** if participant is currently speaking */\n        this.isSpeaking = false;\n        this._connectionQuality = ConnectionQuality.Unknown;\n        this.sid = sid;\n        this.identity = identity;\n        this.audioTracks = new Map();\n        this.videoTracks = new Map();\n        this.tracks = new Map();\n    }\n    getTracks() {\n        return Array.from(this.tracks.values());\n    }\n    /**\n     * Finds the first track that matches the source filter, for example, getting\n     * the user's camera track with getTrackBySource(Track.Source.Camera).\n     * @param source\n     * @returns\n     */\n    getTrack(source) {\n        if (source === Track_1.Track.Source.Unknown) {\n            return;\n        }\n        for (const [, pub] of this.tracks) {\n            if (pub.source === source) {\n                return pub;\n            }\n            if (pub.source === Track_1.Track.Source.Unknown) {\n                if (source === Track_1.Track.Source.Microphone && pub.kind === Track_1.Track.Kind.Audio && pub.trackName !== 'screen') {\n                    return pub;\n                }\n                if (source === Track_1.Track.Source.Camera && pub.kind === Track_1.Track.Kind.Video && pub.trackName !== 'screen') {\n                    return pub;\n                }\n                if (source === Track_1.Track.Source.ScreenShare && pub.kind === Track_1.Track.Kind.Video && pub.trackName === 'screen') {\n                    return pub;\n                }\n                if (source === Track_1.Track.Source.ScreenShareAudio && pub.kind === Track_1.Track.Kind.Audio && pub.trackName === 'screen') {\n                    return pub;\n                }\n            }\n        }\n    }\n    /**\n     * Finds the first track that matches the track's name.\n     * @param name\n     * @returns\n     */\n    getTrackByName(name) {\n        for (const [, pub] of this.tracks) {\n            if (pub.trackName === name) {\n                return pub;\n            }\n        }\n    }\n    get connectionQuality() {\n        return this._connectionQuality;\n    }\n    get isCameraEnabled() {\n        var _a;\n        const track = this.getTrack(Track_1.Track.Source.Camera);\n        return !((_a = track === null || track === void 0 ? void 0 : track.isMuted) !== null && _a !== void 0 ? _a : true);\n    }\n    get isMicrophoneEnabled() {\n        var _a;\n        const track = this.getTrack(Track_1.Track.Source.Microphone);\n        return !((_a = track === null || track === void 0 ? void 0 : track.isMuted) !== null && _a !== void 0 ? _a : true);\n    }\n    get isScreenShareEnabled() {\n        const track = this.getTrack(Track_1.Track.Source.ScreenShare);\n        return !!track;\n    }\n    /** when participant joined the room */\n    get joinedAt() {\n        if (this.participantInfo) {\n            return new Date(this.participantInfo.joinedAt * 1000);\n        }\n        return new Date();\n    }\n    /** @internal */\n    updateInfo(info) {\n        this.identity = info.identity;\n        this.sid = info.sid;\n        this.setMetadata(info.metadata);\n        // set this last so setMetadata can detect changes\n        this.participantInfo = info;\n    }\n    /** @internal */\n    setMetadata(md) {\n        const changed = !this.participantInfo || this.participantInfo.metadata !== md;\n        const prevMetadata = this.metadata;\n        this.metadata = md;\n        if (changed) {\n            this.emit(events_2.ParticipantEvent.MetadataChanged, prevMetadata);\n        }\n    }\n    /** @internal */\n    setIsSpeaking(speaking) {\n        if (speaking === this.isSpeaking) {\n            return;\n        }\n        this.isSpeaking = speaking;\n        if (speaking) {\n            this.lastSpokeAt = new Date();\n        }\n        this.emit(events_2.ParticipantEvent.IsSpeakingChanged, speaking);\n    }\n    /** @internal */\n    setConnectionQuality(q) {\n        const prevQuality = this._connectionQuality;\n        this._connectionQuality = qualityFromProto(q);\n        if (prevQuality !== this._connectionQuality) {\n            this.emit(events_2.ParticipantEvent.ConnectionQualityChanged, this._connectionQuality);\n        }\n    }\n    addTrackPublication(publication) {\n        // forward publication driven events\n        publication.on(events_2.TrackEvent.Muted, () => {\n            this.emit(events_2.ParticipantEvent.TrackMuted, publication);\n        });\n        publication.on(events_2.TrackEvent.Unmuted, () => {\n            this.emit(events_2.ParticipantEvent.TrackUnmuted, publication);\n        });\n        const pub = publication;\n        if (pub.track) {\n            pub.track.sid = publication.trackSid;\n        }\n        this.tracks.set(publication.trackSid, publication);\n        switch (publication.kind) {\n            case Track_1.Track.Kind.Audio:\n                this.audioTracks.set(publication.trackSid, publication);\n                break;\n            case Track_1.Track.Kind.Video:\n                this.videoTracks.set(publication.trackSid, publication);\n                break;\n            default:\n                break;\n        }\n    }\n}\nexports.default = Participant;\n"},"sourceMaps":{"js":{"version":3,"file":"Participant.js","sourceRoot":"","sources":["../../../src/room/participant/Participant.ts"],"names":[],"mappings":"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","sourcesContent":[null]}},"error":null,"hash":"0df49e9aa63da4c64a290d163261f937","cacheData":{"env":{}}}