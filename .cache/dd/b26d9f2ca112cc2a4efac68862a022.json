{"id":"node_modules/livekit-client/dist/room/participant/LocalParticipant.js","dependencies":[{"name":"D:\\Livekit-Client\\node_modules\\livekit-client\\dist\\room\\participant\\LocalParticipant.js.map","includedInParent":true,"mtime":1680887195077},{"name":"D:\\Livekit-Client\\package.json","includedInParent":true,"mtime":1680887270118},{"name":"D:\\Livekit-Client\\node_modules\\livekit-client\\package.json","includedInParent":true,"mtime":1680887189879},{"name":"../../logger","loc":{"line":15,"column":41,"index":938},"parent":"D:\\Livekit-Client\\node_modules\\livekit-client\\dist\\room\\participant\\LocalParticipant.js","resolved":"D:\\Livekit-Client\\node_modules\\livekit-client\\dist\\logger.js"},{"name":"../../proto/livekit_rtc","loc":{"line":16,"column":30,"index":986},"parent":"D:\\Livekit-Client\\node_modules\\livekit-client\\dist\\room\\participant\\LocalParticipant.js","resolved":"D:\\Livekit-Client\\node_modules\\livekit-client\\dist\\proto\\livekit_rtc.js"},{"name":"../defaults","loc":{"line":17,"column":27,"index":1041},"parent":"D:\\Livekit-Client\\node_modules\\livekit-client\\dist\\room\\participant\\LocalParticipant.js","resolved":"D:\\Livekit-Client\\node_modules\\livekit-client\\dist\\room\\defaults.js"},{"name":"../errors","loc":{"line":18,"column":25,"index":1082},"parent":"D:\\Livekit-Client\\node_modules\\livekit-client\\dist\\room\\participant\\LocalParticipant.js","resolved":"D:\\Livekit-Client\\node_modules\\livekit-client\\dist\\room\\errors.js"},{"name":"../events","loc":{"line":19,"column":25,"index":1121},"parent":"D:\\Livekit-Client\\node_modules\\livekit-client\\dist\\room\\participant\\LocalParticipant.js","resolved":"D:\\Livekit-Client\\node_modules\\livekit-client\\dist\\room\\events.js"},{"name":"../track/create","loc":{"line":20,"column":25,"index":1160},"parent":"D:\\Livekit-Client\\node_modules\\livekit-client\\dist\\room\\participant\\LocalParticipant.js","resolved":"D:\\Livekit-Client\\node_modules\\livekit-client\\dist\\room\\track\\create.js"},{"name":"../track/LocalAudioTrack","loc":{"line":21,"column":50,"index":1230},"parent":"D:\\Livekit-Client\\node_modules\\livekit-client\\dist\\room\\participant\\LocalParticipant.js","resolved":"D:\\Livekit-Client\\node_modules\\livekit-client\\dist\\room\\track\\LocalAudioTrack.js"},{"name":"../track/LocalTrackPublication","loc":{"line":22,"column":56,"index":1316},"parent":"D:\\Livekit-Client\\node_modules\\livekit-client\\dist\\room\\participant\\LocalParticipant.js","resolved":"D:\\Livekit-Client\\node_modules\\livekit-client\\dist\\room\\track\\LocalTrackPublication.js"},{"name":"../track/LocalVideoTrack","loc":{"line":23,"column":50,"index":1402},"parent":"D:\\Livekit-Client\\node_modules\\livekit-client\\dist\\room\\participant\\LocalParticipant.js","resolved":"D:\\Livekit-Client\\node_modules\\livekit-client\\dist\\room\\track\\LocalVideoTrack.js"},{"name":"../track/options","loc":{"line":24,"column":26,"index":1458},"parent":"D:\\Livekit-Client\\node_modules\\livekit-client\\dist\\room\\participant\\LocalParticipant.js","resolved":"D:\\Livekit-Client\\node_modules\\livekit-client\\dist\\room\\track\\options.js"},{"name":"../track/Track","loc":{"line":25,"column":24,"index":1503},"parent":"D:\\Livekit-Client\\node_modules\\livekit-client\\dist\\room\\participant\\LocalParticipant.js","resolved":"D:\\Livekit-Client\\node_modules\\livekit-client\\dist\\room\\track\\Track.js"},{"name":"./Participant","loc":{"line":26,"column":46,"index":1568},"parent":"D:\\Livekit-Client\\node_modules\\livekit-client\\dist\\room\\participant\\LocalParticipant.js","resolved":"D:\\Livekit-Client\\node_modules\\livekit-client\\dist\\room\\participant\\Participant.js"},{"name":"./RemoteParticipant","loc":{"line":27,"column":52,"index":1639},"parent":"D:\\Livekit-Client\\node_modules\\livekit-client\\dist\\room\\participant\\LocalParticipant.js","resolved":"D:\\Livekit-Client\\node_modules\\livekit-client\\dist\\room\\participant\\RemoteParticipant.js"}],"generated":{"js":"\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst logger_1 = __importDefault(require(\"../../logger\"));\nconst livekit_rtc_1 = require(\"../../proto/livekit_rtc\");\nconst defaults_1 = require(\"../defaults\");\nconst errors_1 = require(\"../errors\");\nconst events_1 = require(\"../events\");\nconst create_1 = require(\"../track/create\");\nconst LocalAudioTrack_1 = __importDefault(require(\"../track/LocalAudioTrack\"));\nconst LocalTrackPublication_1 = __importDefault(require(\"../track/LocalTrackPublication\"));\nconst LocalVideoTrack_1 = __importDefault(require(\"../track/LocalVideoTrack\"));\nconst options_1 = require(\"../track/options\");\nconst Track_1 = require(\"../track/Track\");\nconst Participant_1 = __importDefault(require(\"./Participant\"));\nconst RemoteParticipant_1 = __importDefault(require(\"./RemoteParticipant\"));\nclass LocalParticipant extends Participant_1.default {\n    /** @internal */\n    constructor(sid, identity, engine) {\n        super(sid, identity);\n        /** @internal */\n        this.pendingPublishing = new Set();\n        /** @internal */\n        this.onTrackUnmuted = (track) => {\n            this.onTrackMuted(track, false);\n        };\n        // when the local track changes in mute status, we'll notify server as such\n        /** @internal */\n        this.onTrackMuted = (track, muted) => {\n            if (muted === undefined) {\n                muted = true;\n            }\n            if (!track.sid) {\n                logger_1.default.error('could not update mute status for unpublished track', track);\n                return;\n            }\n            this.engine.updateMuteStatus(track.sid, muted);\n        };\n        this.presets169 = [\n            options_1.VideoPresets.qvga,\n            options_1.VideoPresets.vga,\n            options_1.VideoPresets.qhd,\n            options_1.VideoPresets.hd,\n            options_1.VideoPresets.fhd,\n        ];\n        this.presets43 = [\n            options_1.VideoPresets43.qvga,\n            options_1.VideoPresets43.vga,\n            options_1.VideoPresets43.qhd,\n            options_1.VideoPresets43.hd,\n            options_1.VideoPresets43.fhd,\n        ];\n        this.presetsScreenShare = [\n            options_1.ScreenSharePresets.vga,\n            options_1.ScreenSharePresets.hd_8,\n            options_1.ScreenSharePresets.hd_15,\n            options_1.ScreenSharePresets.fhd_15,\n            options_1.ScreenSharePresets.fhd_30,\n        ];\n        this.audioTracks = new Map();\n        this.videoTracks = new Map();\n        this.tracks = new Map();\n        this.engine = engine;\n        this.engine.on(events_1.EngineEvent.RemoteMuteChanged, (trackSid, muted) => {\n            const pub = this.tracks.get(trackSid);\n            if (!pub || !pub.track) {\n                return;\n            }\n            if (muted) {\n                pub.mute();\n            }\n            else {\n                pub.unmute();\n            }\n        });\n    }\n    getTrack(source) {\n        const track = super.getTrack(source);\n        if (track) {\n            return track;\n        }\n    }\n    getTrackByName(name) {\n        const track = super.getTrackByName(name);\n        if (track) {\n            return track;\n        }\n    }\n    /**\n     * Enable or disable a participant's camera track.\n     *\n     * If a track has already published, it'll mute or unmute the track.\n     */\n    setCameraEnabled(enabled) {\n        return this.setTrackEnabled(Track_1.Track.Source.Camera, enabled);\n    }\n    /**\n     * Enable or disable a participant's microphone track.\n     *\n     * If a track has already published, it'll mute or unmute the track.\n     */\n    setMicrophoneEnabled(enabled) {\n        return this.setTrackEnabled(Track_1.Track.Source.Microphone, enabled);\n    }\n    /**\n     * Start or stop sharing a participant's screen\n     */\n    setScreenShareEnabled(enabled) {\n        return this.setTrackEnabled(Track_1.Track.Source.ScreenShare, enabled);\n    }\n    /**\n     * Enable or disable publishing for a track by source. This serves as a simple\n     * way to manage the common tracks (camera, mic, or screen share)\n     */\n    setTrackEnabled(source, enabled) {\n        return __awaiter(this, void 0, void 0, function* () {\n            logger_1.default.debug('setTrackEnabled', source, enabled);\n            const track = this.getTrack(source);\n            if (enabled) {\n                if (track) {\n                    yield track.unmute();\n                }\n                else {\n                    let localTrack;\n                    if (this.pendingPublishing.has(source)) {\n                        // no-op it's already been requested\n                        return;\n                    }\n                    this.pendingPublishing.add(source);\n                    try {\n                        switch (source) {\n                            case Track_1.Track.Source.Camera:\n                                localTrack = yield create_1.createLocalVideoTrack();\n                                break;\n                            case Track_1.Track.Source.Microphone:\n                                localTrack = yield create_1.createLocalAudioTrack();\n                                break;\n                            case Track_1.Track.Source.ScreenShare:\n                                [localTrack] = yield create_1.createLocalScreenTracks({ audio: false });\n                                break;\n                            default:\n                                throw new errors_1.TrackInvalidError(source);\n                        }\n                        yield this.publishTrack(localTrack);\n                    }\n                    catch (e) {\n                        if (e instanceof Error && !(e instanceof errors_1.TrackInvalidError)) {\n                            this.emit(events_1.ParticipantEvent.MediaDevicesError, e);\n                        }\n                        throw e;\n                    }\n                    finally {\n                        this.pendingPublishing.delete(source);\n                    }\n                }\n            }\n            else if (track && track.track) {\n                // screenshare cannot be muted, unpublish instead\n                if (source === Track_1.Track.Source.ScreenShare) {\n                    this.unpublishTrack(track.track);\n                }\n                else {\n                    yield track.mute();\n                }\n            }\n        });\n    }\n    /**\n     * Publish a new track to the room\n     * @param track\n     * @param options\n     */\n    publishTrack(track, options) {\n        var _a, _b, _c, _d, _e;\n        return __awaiter(this, void 0, void 0, function* () {\n            const opts = {};\n            Object.assign(opts, defaults_1.getTrackPublishDefaults(), options);\n            // convert raw media track into audio or video track\n            if (track instanceof MediaStreamTrack) {\n                switch (track.kind) {\n                    case 'audio':\n                        track = new LocalAudioTrack_1.default(track, options === null || options === void 0 ? void 0 : options.name);\n                        break;\n                    case 'video':\n                        track = new LocalVideoTrack_1.default(track, options === null || options === void 0 ? void 0 : options.name);\n                        break;\n                    default:\n                        throw new errors_1.TrackInvalidError(`unsupported MediaStreamTrack kind ${track.kind}`);\n                }\n            }\n            // is it already published? if so skip\n            let existingPublication;\n            this.tracks.forEach((publication) => {\n                if (!publication.track) {\n                    return;\n                }\n                if (publication.track === track) {\n                    existingPublication = publication;\n                }\n            });\n            if (existingPublication)\n                return existingPublication;\n            if (opts.source) {\n                track.source = opts.source;\n            }\n            if (opts.name) {\n                track.name = opts.name;\n            }\n            if (opts.stopMicTrackOnMute && track instanceof LocalAudioTrack_1.default) {\n                track.stopOnMute = true;\n            }\n            // handle track actions\n            track.on(events_1.TrackEvent.Muted, this.onTrackMuted);\n            track.on(events_1.TrackEvent.Unmuted, this.onTrackUnmuted);\n            track.on(events_1.TrackEvent.Ended, () => {\n                this.unpublishTrack(track);\n            });\n            // get local track id for use during publishing\n            const cid = track.mediaStreamTrack.id;\n            // create track publication from track\n            const req = livekit_rtc_1.AddTrackRequest.fromPartial({\n                cid,\n                name: track.name,\n                type: Track_1.Track.kindToProto(track.kind),\n                muted: track.isMuted,\n                source: Track_1.Track.sourceToProto(track.source),\n                disableDtx: !((_a = opts === null || opts === void 0 ? void 0 : opts.dtx) !== null && _a !== void 0 ? _a : true),\n            });\n            if (track.dimensions) {\n                req.width = track.dimensions.width;\n                req.height = track.dimensions.height;\n            }\n            const ti = yield this.engine.addTrack(req);\n            const publication = new LocalTrackPublication_1.default(track.kind, ti, track);\n            track.sid = ti.sid;\n            let encodings;\n            // for video\n            if (track.kind === Track_1.Track.Kind.Video) {\n                // TODO: support react native, which doesn't expose getSettings\n                const settings = track.mediaStreamTrack.getSettings();\n                const width = (_b = settings.width) !== null && _b !== void 0 ? _b : (_c = track.dimensions) === null || _c === void 0 ? void 0 : _c.width;\n                const height = (_d = settings.height) !== null && _d !== void 0 ? _d : (_e = track.dimensions) === null || _e === void 0 ? void 0 : _e.height;\n                encodings = this.computeVideoEncodings(track.source === Track_1.Track.Source.ScreenShare, width, height, opts);\n            }\n            else if (track.kind === Track_1.Track.Kind.Audio && opts.audioBitrate) {\n                encodings = [\n                    {\n                        maxBitrate: opts.audioBitrate,\n                    },\n                ];\n            }\n            if (!this.engine.publisher) {\n                throw new errors_1.UnexpectedConnectionState('publisher is closed');\n            }\n            logger_1.default.debug('publishing with encodings', encodings);\n            const transceiverInit = { direction: 'sendonly' };\n            if (encodings) {\n                transceiverInit.sendEncodings = encodings;\n            }\n            const transceiver = this.engine.publisher.pc.addTransceiver(track.mediaStreamTrack, transceiverInit);\n            this.engine.negotiate();\n            // store RTPSender\n            track.sender = transceiver.sender;\n            if (track instanceof LocalVideoTrack_1.default) {\n                track.startMonitor(this.engine.client);\n            }\n            if (opts.videoCodec) {\n                this.setPreferredCodec(transceiver, track.kind, opts.videoCodec);\n            }\n            this.addTrackPublication(publication);\n            // send event for publication\n            this.emit(events_1.ParticipantEvent.LocalTrackPublished, publication);\n            return publication;\n        });\n    }\n    unpublishTrack(track) {\n        // look through all published tracks to find the right ones\n        const publication = this.getPublicationForTrack(track);\n        logger_1.default.debug('unpublishTrack', 'unpublishing track', track);\n        if (!publication) {\n            logger_1.default.warn('unpublishTrack', 'track was not unpublished because no publication was found', track);\n            return null;\n        }\n        if (track instanceof LocalAudioTrack_1.default || track instanceof LocalVideoTrack_1.default) {\n            track.removeListener(events_1.TrackEvent.Muted, this.onTrackMuted);\n            track.removeListener(events_1.TrackEvent.Unmuted, this.onTrackUnmuted);\n        }\n        track.stop();\n        let mediaStreamTrack;\n        if (track instanceof MediaStreamTrack) {\n            mediaStreamTrack = track;\n        }\n        else {\n            mediaStreamTrack = track.mediaStreamTrack;\n        }\n        if (this.engine.publisher) {\n            const senders = this.engine.publisher.pc.getSenders();\n            senders.forEach((sender) => {\n                var _a;\n                if (sender.track === mediaStreamTrack) {\n                    try {\n                        (_a = this.engine.publisher) === null || _a === void 0 ? void 0 : _a.pc.removeTrack(sender);\n                        this.engine.negotiate();\n                    }\n                    catch (e) {\n                        logger_1.default.warn('unpublishTrack', 'failed to remove track', e);\n                    }\n                }\n            });\n        }\n        // remove from our maps\n        this.tracks.delete(publication.trackSid);\n        switch (publication.kind) {\n            case Track_1.Track.Kind.Audio:\n                this.audioTracks.delete(publication.trackSid);\n                break;\n            case Track_1.Track.Kind.Video:\n                this.videoTracks.delete(publication.trackSid);\n                break;\n            default:\n                break;\n        }\n        this.emit(events_1.ParticipantEvent.LocalTrackUnpublished, publication);\n        return publication;\n    }\n    unpublishTracks(tracks) {\n        const publications = [];\n        tracks.forEach((track) => {\n            const pub = this.unpublishTrack(track);\n            if (pub) {\n                publications.push(pub);\n            }\n        });\n        return publications;\n    }\n    get publisherMetrics() {\n        return null;\n    }\n    /**\n     * Publish a new data payload to the room. Data will be forwarded to each\n     * participant in the room if the destination argument is empty\n     *\n     * @param data Uint8Array of the payload. To send string data, use TextEncoder.encode\n     * @param kind whether to send this as reliable or lossy.\n     * For data that you need delivery guarantee (such as chat messages), use Reliable.\n     * For data that should arrive as quickly as possible, but you are ok with dropped\n     * packets, use Lossy.\n     * @param destination the participants who will receive the message\n     */\n    publishData(data, kind, destination) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const dest = [];\n            if (destination !== undefined) {\n                destination.forEach((val) => {\n                    if (val instanceof RemoteParticipant_1.default) {\n                        dest.push(val.sid);\n                    }\n                    else {\n                        dest.push(val);\n                    }\n                });\n            }\n            const packet = {\n                kind,\n                user: {\n                    participantSid: this.sid,\n                    payload: data,\n                    destinationSids: dest,\n                },\n            };\n            yield this.engine.sendDataPacket(packet, kind);\n        });\n    }\n    getPublicationForTrack(track) {\n        let publication;\n        this.tracks.forEach((pub) => {\n            const localTrack = pub.track;\n            if (!localTrack) {\n                return;\n            }\n            // this looks overly complicated due to this object tree\n            if (track instanceof MediaStreamTrack) {\n                if (localTrack instanceof LocalAudioTrack_1.default\n                    || localTrack instanceof LocalVideoTrack_1.default) {\n                    if (localTrack.mediaStreamTrack === track) {\n                        publication = pub;\n                    }\n                }\n            }\n            else if (track === localTrack) {\n                publication = pub;\n            }\n        });\n        return publication;\n    }\n    setPreferredCodec(transceiver, kind, videoCodec) {\n        if (!('getCapabilities' in RTCRtpSender)) {\n            return;\n        }\n        const cap = RTCRtpSender.getCapabilities(kind);\n        if (!cap)\n            return;\n        const selected = cap.codecs.find((c) => {\n            const codec = c.mimeType.toLowerCase();\n            const matchesVideoCodec = codec === `video/${videoCodec}`;\n            // for h264 codecs that have sdpFmtpLine available, use only if the\n            // profile-level-id is 42e01f for cross-browser compatibility\n            if (videoCodec === 'h264' && c.sdpFmtpLine) {\n                return matchesVideoCodec && c.sdpFmtpLine.includes('profile-level-id=42e01f');\n            }\n            return matchesVideoCodec || codec === 'audio/opus';\n        });\n        if (selected && 'setCodecPreferences' in transceiver) {\n            // @ts-ignore\n            transceiver.setCodecPreferences([selected]);\n        }\n    }\n    computeVideoEncodings(isScreenShare, width, height, options) {\n        let encodings;\n        let videoEncoding = options === null || options === void 0 ? void 0 : options.videoEncoding;\n        if (isScreenShare) {\n            videoEncoding = options === null || options === void 0 ? void 0 : options.screenShareEncoding;\n        }\n        const useSimulcast = !isScreenShare && (options === null || options === void 0 ? void 0 : options.simulcast);\n        if ((!videoEncoding && !useSimulcast) || !width || !height) {\n            // don't set encoding when we are not simulcasting and user isn't restricting\n            // encoding parameters\n            return undefined;\n        }\n        if (!videoEncoding) {\n            // find the right encoding based on width/height\n            videoEncoding = this.determineAppropriateEncoding(isScreenShare, width, height);\n            logger_1.default.debug('using video encoding', videoEncoding);\n        }\n        if (useSimulcast) {\n            const presets = this.presetsForResolution(isScreenShare, width, height);\n            const midPreset = presets[1];\n            const lowPreset = presets[0];\n            // if resolution is high enough, we would send [q, h, f] res..\n            // otherwise only send [q, h]\n            // NOTE:\n            //   1. Ordering of these encodings is important. Chrome seems\n            //      to use the index into encodings to decide which layer\n            //      to disable when constrained (bandwidth or CPU). So,\n            //      encodings should be ordered in increasing spatial\n            //      resolution order.\n            //   2. ion-sfu translates rids into layers. So, all encodings\n            //      should have the base layer `q` and then more added\n            //      based on other conditions.\n            if (width >= 960) {\n                encodings = [\n                    {\n                        rid: 'q',\n                        scaleResolutionDownBy: height / lowPreset.height,\n                        maxBitrate: lowPreset.encoding.maxBitrate,\n                        /* @ts-ignore */\n                        maxFramerate: lowPreset.encoding.maxFramerate,\n                    },\n                    {\n                        rid: 'h',\n                        scaleResolutionDownBy: height / midPreset.height,\n                        maxBitrate: midPreset.encoding.maxBitrate,\n                        /* @ts-ignore */\n                        maxFramerate: midPreset.encoding.maxFramerate,\n                    },\n                    {\n                        rid: 'f',\n                        maxBitrate: videoEncoding.maxBitrate,\n                        /* @ts-ignore */\n                        maxFramerate: videoEncoding.maxFramerate,\n                    },\n                ];\n            }\n            else {\n                encodings = [\n                    {\n                        rid: 'q',\n                        scaleResolutionDownBy: height / lowPreset.height,\n                        maxBitrate: lowPreset.encoding.maxBitrate,\n                        /* @ts-ignore */\n                        maxFramerate: lowPreset.encoding.maxFramerate,\n                    },\n                    {\n                        rid: 'h',\n                        maxBitrate: videoEncoding.maxBitrate,\n                        /* @ts-ignore */\n                        maxFramerate: videoEncoding.maxFramerate,\n                    },\n                ];\n            }\n        }\n        else {\n            encodings = [videoEncoding];\n        }\n        return encodings;\n    }\n    determineAppropriateEncoding(isScreenShare, width, height) {\n        const presets = this.presetsForResolution(isScreenShare, width, height);\n        let { encoding } = presets[0];\n        for (let i = 0; i < presets.length; i += 1) {\n            const preset = presets[i];\n            if (width >= preset.width && height >= preset.height) {\n                encoding = preset.encoding;\n            }\n        }\n        return encoding;\n    }\n    presetsForResolution(isScreenShare, width, height) {\n        if (isScreenShare) {\n            return this.presetsScreenShare;\n        }\n        const aspect = width / height;\n        if (Math.abs(aspect - 16.0 / 9) < Math.abs(aspect - 4.0 / 3)) {\n            return this.presets169;\n        }\n        return this.presets43;\n    }\n}\nexports.default = LocalParticipant;\n"},"sourceMaps":{"js":{"version":3,"file":"LocalParticipant.js","sourceRoot":"","sources":["../../../src/room/participant/LocalParticipant.ts"],"names":[],"mappings":"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","sourcesContent":[null]}},"error":null,"hash":"4b2d153342c42f4ed120e65b000e0054","cacheData":{"env":{}}}