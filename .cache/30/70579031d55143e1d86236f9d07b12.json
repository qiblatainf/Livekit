{"id":"node_modules/livekit-client/dist/room/participant/RemoteParticipant.js","dependencies":[{"name":"D:\\Livekit-Client\\node_modules\\livekit-client\\dist\\room\\participant\\RemoteParticipant.js.map","includedInParent":true,"mtime":1680887197691},{"name":"D:\\Livekit-Client\\package.json","includedInParent":true,"mtime":1680887270118},{"name":"D:\\Livekit-Client\\node_modules\\livekit-client\\package.json","includedInParent":true,"mtime":1680887189879},{"name":"../../logger","loc":{"line":6,"column":41,"index":257},"parent":"D:\\Livekit-Client\\node_modules\\livekit-client\\dist\\room\\participant\\RemoteParticipant.js","resolved":"D:\\Livekit-Client\\node_modules\\livekit-client\\dist\\logger.js"},{"name":"../events","loc":{"line":7,"column":25,"index":300},"parent":"D:\\Livekit-Client\\node_modules\\livekit-client\\dist\\room\\participant\\RemoteParticipant.js","resolved":"D:\\Livekit-Client\\node_modules\\livekit-client\\dist\\room\\events.js"},{"name":"../track/RemoteAudioTrack","loc":{"line":8,"column":51,"index":365},"parent":"D:\\Livekit-Client\\node_modules\\livekit-client\\dist\\room\\participant\\RemoteParticipant.js","resolved":"D:\\Livekit-Client\\node_modules\\livekit-client\\dist\\room\\track\\RemoteAudioTrack.js"},{"name":"../track/RemoteTrackPublication","loc":{"line":9,"column":57,"index":453},"parent":"D:\\Livekit-Client\\node_modules\\livekit-client\\dist\\room\\participant\\RemoteParticipant.js","resolved":"D:\\Livekit-Client\\node_modules\\livekit-client\\dist\\room\\track\\RemoteTrackPublication.js"},{"name":"../track/RemoteVideoTrack","loc":{"line":10,"column":51,"index":541},"parent":"D:\\Livekit-Client\\node_modules\\livekit-client\\dist\\room\\participant\\RemoteParticipant.js","resolved":"D:\\Livekit-Client\\node_modules\\livekit-client\\dist\\room\\track\\RemoteVideoTrack.js"},{"name":"../track/Track","loc":{"line":11,"column":24,"index":596},"parent":"D:\\Livekit-Client\\node_modules\\livekit-client\\dist\\room\\participant\\RemoteParticipant.js","resolved":"D:\\Livekit-Client\\node_modules\\livekit-client\\dist\\room\\track\\Track.js"},{"name":"./Participant","loc":{"line":12,"column":46,"index":661},"parent":"D:\\Livekit-Client\\node_modules\\livekit-client\\dist\\room\\participant\\RemoteParticipant.js","resolved":"D:\\Livekit-Client\\node_modules\\livekit-client\\dist\\room\\participant\\Participant.js"}],"generated":{"js":"\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst logger_1 = __importDefault(require(\"../../logger\"));\nconst events_1 = require(\"../events\");\nconst RemoteAudioTrack_1 = __importDefault(require(\"../track/RemoteAudioTrack\"));\nconst RemoteTrackPublication_1 = __importDefault(require(\"../track/RemoteTrackPublication\"));\nconst RemoteVideoTrack_1 = __importDefault(require(\"../track/RemoteVideoTrack\"));\nconst Track_1 = require(\"../track/Track\");\nconst Participant_1 = __importDefault(require(\"./Participant\"));\nclass RemoteParticipant extends Participant_1.default {\n    /** @internal */\n    constructor(signalClient, id, name) {\n        super(id, name || '');\n        this.signalClient = signalClient;\n        this.tracks = new Map();\n        this.audioTracks = new Map();\n        this.videoTracks = new Map();\n    }\n    /** @internal */\n    static fromParticipantInfo(signalClient, pi) {\n        const rp = new RemoteParticipant(signalClient, pi.sid, pi.identity);\n        rp.updateInfo(pi);\n        return rp;\n    }\n    addTrackPublication(publication) {\n        super.addTrackPublication(publication);\n        // register action events\n        publication.on(events_1.TrackEvent.UpdateSettings, (settings) => {\n            this.signalClient.sendUpdateTrackSettings(settings);\n        });\n        publication.on(events_1.TrackEvent.UpdateSubscription, (sub) => {\n            this.signalClient.sendUpdateSubscription(sub);\n        });\n    }\n    getTrack(source) {\n        const track = super.getTrack(source);\n        if (track) {\n            return track;\n        }\n    }\n    getTrackByName(name) {\n        const track = super.getTrackByName(name);\n        if (track) {\n            return track;\n        }\n    }\n    /** @internal */\n    addSubscribedMediaTrack(mediaTrack, sid, receiver, autoManageVideo, triesLeft) {\n        // find the track publication\n        // it's possible for the media track to arrive before participant info\n        let publication = this.getTrackPublication(sid);\n        // it's also possible that the browser didn't honor our original track id\n        // FireFox would use its own local uuid instead of server track id\n        if (!publication) {\n            if (!sid.startsWith('TR')) {\n                // find the first track that matches type\n                this.tracks.forEach((p) => {\n                    if (!publication && mediaTrack.kind === p.kind.toString()) {\n                        publication = p;\n                    }\n                });\n            }\n        }\n        // when we couldn't locate the track, it's possible that the metadata hasn't\n        // yet arrived. Wait a bit longer for it to arrive, or fire an error\n        if (!publication) {\n            if (triesLeft === 0) {\n                logger_1.default.error('could not find published track', this.sid, sid);\n                this.emit(events_1.ParticipantEvent.TrackSubscriptionFailed, sid);\n                return;\n            }\n            if (triesLeft === undefined)\n                triesLeft = 20;\n            setTimeout(() => {\n                this.addSubscribedMediaTrack(mediaTrack, sid, receiver, autoManageVideo, triesLeft - 1);\n            }, 150);\n            return;\n        }\n        const isVideo = mediaTrack.kind === 'video';\n        let track;\n        if (isVideo) {\n            track = new RemoteVideoTrack_1.default(mediaTrack, sid, receiver, autoManageVideo);\n        }\n        else {\n            track = new RemoteAudioTrack_1.default(mediaTrack, sid, receiver);\n        }\n        track.start();\n        publication.setTrack(track);\n        // set track name etc\n        track.name = publication.trackName;\n        track.sid = publication.trackSid;\n        track.source = publication.source;\n        // keep publication's muted status\n        track.isMuted = publication.isMuted;\n        // when media track is ended, fire the event\n        mediaTrack.onended = () => {\n            if (publication) {\n                publication.track = undefined;\n            }\n            this.emit(events_1.ParticipantEvent.TrackUnsubscribed, track, publication);\n        };\n        this.emit(events_1.ParticipantEvent.TrackSubscribed, track, publication);\n        return publication;\n    }\n    /** @internal */\n    get hasMetadata() {\n        return !!this.participantInfo;\n    }\n    getTrackPublication(sid) {\n        return this.tracks.get(sid);\n    }\n    /** @internal */\n    updateInfo(info) {\n        const alreadyHasMetadata = this.hasMetadata;\n        super.updateInfo(info);\n        // we are getting a list of all available tracks, reconcile in here\n        // and send out events for changes\n        // reconcile track publications, publish events only if metadata is already there\n        // i.e. changes since the local participant has joined\n        const validTracks = new Map();\n        const newTracks = new Map();\n        info.tracks.forEach((ti) => {\n            let publication = this.getTrackPublication(ti.sid);\n            if (!publication) {\n                // new publication\n                const kind = Track_1.Track.kindFromProto(ti.type);\n                if (!kind) {\n                    return;\n                }\n                publication = new RemoteTrackPublication_1.default(kind, ti.sid, ti.name);\n                publication.updateInfo(ti);\n                newTracks.set(ti.sid, publication);\n                this.addTrackPublication(publication);\n            }\n            else {\n                publication.updateInfo(ti);\n            }\n            validTracks.set(ti.sid, publication);\n        });\n        // send new tracks\n        if (alreadyHasMetadata) {\n            newTracks.forEach((publication) => {\n                this.emit(events_1.ParticipantEvent.TrackPublished, publication);\n            });\n        }\n        // detect removed tracks\n        this.tracks.forEach((publication) => {\n            if (!validTracks.has(publication.trackSid)) {\n                this.unpublishTrack(publication.trackSid, true);\n            }\n        });\n    }\n    /** @internal */\n    unpublishTrack(sid, sendUnpublish) {\n        const publication = this.tracks.get(sid);\n        if (!publication) {\n            return;\n        }\n        this.tracks.delete(sid);\n        // remove from the right type map\n        switch (publication.kind) {\n            case Track_1.Track.Kind.Audio:\n                this.audioTracks.delete(sid);\n                break;\n            case Track_1.Track.Kind.Video:\n                this.videoTracks.delete(sid);\n                break;\n            default:\n                break;\n        }\n        // also send unsubscribe, if track is actively subscribed\n        const { track } = publication;\n        if (track) {\n            const { isSubscribed } = publication;\n            track.stop();\n            publication.setTrack(undefined);\n            // always send unsubscribed, since apps may rely on this\n            if (isSubscribed) {\n                this.emit(events_1.ParticipantEvent.TrackUnsubscribed, track, publication);\n            }\n        }\n        if (sendUnpublish) {\n            this.emit(events_1.ParticipantEvent.TrackUnpublished, publication);\n        }\n    }\n    /** @internal */\n    emit(event, ...args) {\n        logger_1.default.trace('participant event', this.sid, event, ...args);\n        return super.emit(event, ...args);\n    }\n}\nexports.default = RemoteParticipant;\n"},"sourceMaps":{"js":{"version":3,"file":"RemoteParticipant.js","sourceRoot":"","sources":["../../../src/room/participant/RemoteParticipant.ts"],"names":[],"mappings":"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","sourcesContent":[null]}},"error":null,"hash":"1b0d96074f91c9fef28c77702cef8560","cacheData":{"env":{}}}